// Copyright (c) Improbable Worlds Ltd, All Rights Reserved

#pragma once

#include "CoreMinimal.h"
#include "Components/ActorComponent.h"
#include "EngineClasses/SpatialInterestConstraints.h"

#include "ActorInterestQueryComponent.generated.h"

namespace SpatialGDK
{
struct Query;
}
class USchemaDatabase;

/**
 * Creates a SpatialOS Query for describing interest that this actor has in other entities. Will be translated into a query for the Interest component attached to the entity which represents actors of this type.
 */
UCLASS(ClassGroup=(SpatialGDK), NotSpatialType, Meta=(BlueprintSpawnableComponent))
class SPATIALGDK_API UActorInterestQueryComponent final : public UActorComponent
{
	GENERATED_BODY()

public:
	UActorInterestQueryComponent();
	~UActorInterestQueryComponent() = default;

	SpatialGDK::Query CreateQuery(const USchemaDatabase& SchemaDatabase) const;

	/**
	 * The root constraint associated with the query generated by this component.
	 */
	UPROPERTY(BlueprintReadonly, EditDefaultsOnly, Instanced)
	UAbstractQueryConstraint* Constraint;

	/**
	 * The frequency that entities captured by this query should be updated at.
	 */
	UPROPERTY(BlueprintReadOnly, EditDefaultsOnly, Meta=(ClampMin=0.0))
	float Frequency;
};
